def hanoi(n,a,b,c):   #n为圆盘数，a代表初始位圆柱，b代表过渡位圆柱，c代表目标位圆柱
    if n==1:
        print(a,'-->',c)
    else:
        hanoi(n-1,a,c,b)   #将初始位的n-1个圆盘移动到过渡位，此时初始位为a，上一级函数的过渡位b即为本级的目标位，上级的目标位c为本级的过渡位
        print(a,'-->',c)
        hanoi(n-1,b,a,c)   #将过渡位的n-1个圆盘移动到目标位，此时初始位为b，上一级函数的目标位c即为本级的目标位，上级的初始位a为本级的过渡位
hanoi(3,'A','B','C')




#----------------汉诺塔-----------------#
# 如果有n个圆盘,所需移动的步数为 2^n-1
i = 0
# 定义一个函数给4个参数n是圆盘的个数,a代表A柱子,b,c 函数里面的是形式参数
def move(n,a,b,c):
    # 把变量i全局化,如果不全局化,只可访问读取不能进行操作修改
    global i
    if n==1:
        i += 1
        print('移动第',i,'次',a,'-->',c)
    else:
        # 1.把A柱上n-1个圆盘移动到B柱上
        move(n-1,a,c,b) # 传的才是实际参数
        # 2.把A柱上最大的移动到C柱子上
        move(1,a,b,c)
        # 3.把B柱子上n-1个圆盘移动到C柱子上
        move(n-1,b,a,c)


move(2,'A','B','C')